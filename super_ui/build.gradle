apply plugin: 'com.android.library'

def rootDirPath = getRootDir().getPath()//获取项目根路劲
android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        versionCode 1
        versionName "1.0"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi', 'armeabi-v7a'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
        dexOptions {
            //避免打包时内存不足，导致一个dex不完整，合并的时候发现大小不一致而报错
            javaMaxHeapSize "4g"
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath true
            }
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/MANIFEST.MF'
        doNotStrip '*/mips/*.so'
        doNotStrip '*/mips64/*.so'
    }
    //解决 Invoke-customs are only supported starting with Android O (--min-api 26)
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false // 即使有报错也不会停止打包
        checkReleaseBuilds false // 打包Release版本的时候也不进行Lint检测
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    //api fileTree(dir: 'libs', include: ['*.aar'])
    api group: "androidx.appcompat", name: "appcompat", version: "$versions.appcompat_version"
    //对应appcompat-v7
    api group: "androidx.constraintlayout", name: "constraintlayout", version: "$versions.constraintlayout_version"
    api "com.google.android.material:material:$versions.material_version"//对应support:design
    api "androidx.legacy:legacy-support-v4:$versions.androidx_v4_version"//对应support:support-v4
    api "androidx.recyclerview:recyclerview:${versions.recyclerview_version}"
    api "com.google.android:flexbox:${versions.flexbox}"
    //lombok插件
    annotationProcessor "org.projectlombok:lombok:${versions.lombok}"
    //
    implementation project(path: ':super_utils')
    implementation project(path: ':xui_lib_1.1.5')   //androidx项目
    api 'com.qmuiteam:qmui:2.0.0-alpha10'


    //AgentWeb 是一个基于的 Android WebView ，极度容易使用以及功能强大的库
    api 'com.github.Justson.AgentWeb:agentweb-core:v4.1.9-androidx' // (必选)
    api 'com.github.Justson.AgentWeb:agentweb-filechooser:v4.1.9-androidx' // (可选)
    api 'com.github.Justson:Downloader:v4.1.9-androidx' // (可选)
    //万能下拉刷新和上拉加载
    api 'com.scwang.smart:refresh-layout-kernel:2.0.3'      //核心必须依赖
    api 'com.scwang.smart:refresh-header-classics:2.0.3'    //经典刷新头
    api 'com.scwang.smart:refresh-header-radar:2.0.3'       //雷达刷新头
    api 'com.scwang.smart:refresh-header-falsify:2.0.3'     //虚拟刷新头
    api 'com.scwang.smart:refresh-header-material:2.0.3'    //谷歌刷新头
    api 'com.scwang.smart:refresh-header-two-level:2.0.3'   //二级刷新头
    api 'com.scwang.smart:refresh-footer-ball:2.0.3'        //球脉冲加载
    api 'com.scwang.smart:refresh-footer-classics:2.0.3'    //经典加载
    //Android界最万能的TabLayout(不仅仅是TabLayout), 支持任意类型的item, 支持Drawable类型的指示器,智能开启滚动等
    api 'com.github.angcyo.DslTablayout:TabLayout:1.6.1'
    api 'com.github.angcyo.DslTablayout:ViewPager1Delegate:1.6.1'  //可选
    api 'com.github.angcyo.DslTablayout:ViewPager2Delegate:1.6.1'//可选


    //万能TabLayout 包含主流样式
    api 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    //动画指示器：viewpager+指示器的UI实现，或者用于TabLayout的指示器
    api('com.github.hackware1993:MagicIndicator:1.5.0') {
        exclude group: 'com.android.support'
    }

    //主流样式banner
    api 'com.youth.banner:banner:2.1.0' //androidx  banner（样式多）
    api 'com.github.zhpanvip:BannerViewPager:3.2.0'   //androidx  banner(支持ViewHolder，自定义指示器)

    //PictureSelector图片选择
    api('io.github.lucksiege:pictureselector:v2.7.3-rc03') {//com.github.LuckSiege.PictureSelector:picture_library:v2.2.3
        exclude group: 'com.android.support'
        exclude group: 'com.github.bumptech.glide'
    }

    api 'com.airbnb.android:lottie:3.7.0'
    /*
    防止Rxjava引发的内存泄漏
 当使用RxJava订阅并执行耗时任务后，当Activity被finish时，如果耗时任务还未完成，没有及时取消订阅，
 就会导致Activity无法被回收，从而引发内存泄漏。为了解决这个问题，就产生了RxLifecycle，
 让RxJava变得有生命周期感知，使得其能及时取消订阅，避免出现内存泄漏问题

 基本使用
 Activity 需继承自 RxAppCompatActivity 或 RxFragmentActivity 或 RxActivity
 Fragment 需继承  RxFragment
     */
    api "com.trello.rxlifecycle4:rxlifecycle-components:$versions.rxlifecycle4"

    /*
    XTabLayout是基于design包中的TabLayout进行了功能的扩展，在保留原有功能的基础上，
    增加了修改选中项字体大小、字体粗体、字体和指示器颜色、分割线、指示器长度以及限制屏幕显示范围内显示的Tab个数等功能
     */
    //api 'com.androidkun:XTabLayout:1.1.5' //基于support
    //动画指示器：viewpager+指示器的UI实现，或者用于TabLayout的指示器
//    api('com.github.hackware1993:MagicIndicator:1.5.0') //基于support
//    api 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'//基于support


}

//jitpack.io依赖仓库用
apply plugin: 'com.github.dcendents.android-maven'
group = 'com.github.zhangqingyou'
//buildscript {
//    apply from: '../versions.gradle'
//    repositories {
//        google()
//        jcenter()
//    }
//    dependencies {
//        // 添加上传到jitpack.io依赖仓库所需的插件 （适配gradle 4.6）
//        classpath "com.github.dcendents:android-maven-gradle-plugin:$versions.android_maven_gradle_plugin"
//    }
//}
